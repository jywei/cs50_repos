'\" t
.\"     Title: get_long_long
.\"    Author: [see the "AUTHORS" section]
.\" Generator: Asciidoctor 1.5.4
.\"      Date: 2016-09-07
.\"    Manual: CS50 Programmer's Manual
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "GET_LONG_LONG" "3" "2016-09-07" "\ \&" "CS50 Programmer\(aqs Manual"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\\$2 \(laURL: \\$1 \(ra\\$3
..
.if \n[.g] .mso www.tmac
.LINKSTYLE blue R < >
.SH "NAME"
get_long_long \- reads a line of text from stdin and returns the equivalent long long.
.SH "SYNOPSIS"
.sp
\fB#include <cs50.h>\fP
.sp
\fBlong long get_long_long(void);\fP
.SH "DESCRIPTION"
.sp
Reads a line of text from standard input and returns the equivalent long long in [\-2^63, 2^63 \- 1), if possible; if text does not represent such a long long or if value would cause underflow or overflow, user is prompted to retry.
.SH "RETURN VALUE"
.sp
Returns the equivalent long long of the line read from stdin, in [\-2^63, 2^63 \- 1), if possible. If line can\(cqt be read, returns \fBLLONG_MAX\fP.
.SH "EXAMPLE"
.sp
.if n \{\
.RS 4
.\}
.nf
// attempt to read long long from stdin
long long ll = get_long_long();

// ensure long long was read
if (ll != LLONG_MAX)
{
    printf("You entered %lli\(rsn", ll);
}
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.sp
get_char(3), get_double(3), get_float(3), get_int(3), get_string(3)